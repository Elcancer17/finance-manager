<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
		     xmlns:converters="using:FinanceManager.Utils.Converters"
		     xmlns:models="using:FinanceManager.ViewModels"
		     xmlns:views="using:FinanceManager.Views"
			 xmlns:pgc="using:Avalonia.PropertyGrid.Controls"
			 xmlns:controls="using:Avalonia.Controls"
             x:Class="FinanceManager.Views.FinanceView"
			 DataContextChanged="UserControl_DataContextChanged"
			 x:DataType="models:MainModel">
	<UserControl.Resources>
		<converters:MonthNameConverter x:Key="monthNameConverter"/>
	</UserControl.Resources>
	<Design.DataContext>
		<!-- This only sets the DataContext for the previewer in an IDE,
               to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
		<models:MainModel />
	</Design.DataContext>

	<Grid RowDefinitions="auto, *" ColumnDefinitions="200, *">

		<ComboBox x:Name="cmbYear"
					SelectedItem="{Binding Path=Finance.SelectedYear}"
					ItemsSource="{Binding Path=Finance.AvailableYears}"
					HorizontalAlignment="Stretch"
					Grid.Row="0"
					Grid.Column="0"/>

		<ListBox x:Name="lbMonths"
				 SelectedItem="{Binding Path=Finance.SelectedMonth}"
				 ItemsSource="{Binding Path=Finance.AvailableMonths}"
				 SelectionMode="Single"
				 Grid.Row="0"
				 Grid.Column="1">
			<ListBox.ItemsPanel>
				<ItemsPanelTemplate>
					<StackPanel Orientation="Horizontal"/>
				</ItemsPanelTemplate>
			</ListBox.ItemsPanel>
			<ListBox.ItemTemplate>
				<DataTemplate>
					<TextBlock Text="{Binding Converter={StaticResource monthNameConverter}}}"/>
				</DataTemplate>
			</ListBox.ItemTemplate>
		</ListBox>

		<ListBox x:Name="lbAccounts"
				 SelectedItem="{Binding Path=Finance.SelectedAccount}"
				 ItemsSource="{Binding Path=Finance.Accounts}"
				 SelectionMode="Single"
				 Grid.Row="1"
				 Grid.Column="0">
			<ListBox.ItemTemplate>
				<DataTemplate>
					<Grid RowDefinitions="auto, auto" ColumnDefinitions="auto, auto" >
						<Ellipse Width="5" Height="5" Fill="Black" Margin="0,0,10,0" Grid.Row="0" Grid.Column="0"/>
						<TextBlock Text="{Binding Path=FinancialInstitution}" Grid.Row="0" Grid.Column="1"/>
						<TextBlock Text="{Binding Path=AccountName}" Grid.Row="1" Grid.Column="1"/>
						<TextBlock Text="{Binding Path=AccountNumber}" Grid.Row="2" Grid.Column="1"/>
					</Grid>
				</DataTemplate>
			</ListBox.ItemTemplate>
		</ListBox>

		<Grid RowDefinitions="*, auto" Grid.Row="1" Grid.Column="1">
			<TreeDataGrid x:Name="dgFinancialData"
						  VerticalAlignment="Stretch"
						  Background="Transparent"
						  Grid.Row="0">
				<TreeDataGrid.Styles>
					<Style Selector=":is(TreeDataGridColumnHeader)">
						<Setter Property="Padding" Value="12,9,6,9" />
						<Setter Property="Foreground" Value="{DynamicResource SystemControlBackgroundBaseMediumBrush}" />
					</Style>
					<Style Selector=":is(TreeDataGridCell)">
						<Setter Property="BorderBrush" Value="{DynamicResource SystemControlBackgroundListLowBrush}" />
						<Setter Property="BorderThickness" Value="0,0,1,1" />
					</Style>
				</TreeDataGrid.Styles>
			</TreeDataGrid>
			<Grid ColumnDefinitions="auto, auto, *, auto" Grid.Row="1">
				<Button x:Name="btnAdd"
						Content="Ajouter"
						Margin="5"
						Padding="20,5,20,5"
						Grid.Column="0"
						Click="btnAdd_Click" />
				<Button x:Name="btnDelete"
						Content="Supprimer"
						Padding="20,5,20,5"
						Grid.Column="1"
						Click="btnDelete_Click" />
				<Button x:Name="btnSave"
						Content="Sauvegarder"
						Padding="20,5,20,5"
						Grid.Column="3"
						Click="btnSave_Click" />
				<ToggleButton
						x:Name="OpenClosePopupButton"
						Grid.Column="2"
						Content="Open/Close Popup"
						Click="btnPopup_Click" />
				<!--<Button Content="Show Popup"
						Name="OpenClosePopupButton"
						Click="OnPopupButton_Click" />-->
			</Grid>
			<Popup x:Name="ThePopup"
					   Grid.Row="1"
					   IsOpen="{Binding Path=IsChecked, ElementName=OpenClosePopupButton, Mode=TwoWay}"
					   PlacementMode="Bottom"
					   PlacementTarget="{Binding ElementName=OpenClosePopupButton}">
				<Border BorderThickness="0.75"
                    BorderBrush="Black"
                    Padding="6,3"
                    Background="White">
					<Grid x:Name="PopupsContent"
					  Background="Gray"
					  Width="1000"
					  Height="200">
						<TextBlock Text="Popup's Content"
								   HorizontalAlignment="Center"
								   VerticalAlignment="Center"/>
					</Grid>
				</Border>
			</Popup>
			<!--<Window.Styles>-->
			<!--<Style Selector="CustomPresenter">
					<Setter Property="Template">
						<ControlTemplate>
							<Border BorderThickness="0.75"
									BorderBrush="Black"
									Padding="6,3"
									Background="White">
								<TextBlock Text="Hello World" />
							</Border>
						</ControlTemplate>
					</Setter>
				</Style>-->
			<!--</Window.Styles>-->
			<StackPanel Orientation="Vertical" VerticalAlignment="Center">
				<!--<Button Content="Show Popup" Name="popupButton" Click="OnPopupButton_Click" />-->
				<!--<Popup Name="Popup"
				WindowManagerAddShadowHint="False"
				StaysOpen="False"
				PlacementMode="Bottom"
				PlacementTarget="{Binding ElementName=popupButton}">
				-->
				<!--<CustomPresenter />-->
				<!--
			</Popup>-->
			</StackPanel>
		</Grid>
	</Grid>
</UserControl>
